<template>
  <div class="shade" v-show="showPopover" @click="$emit('close')">
    <div>
      <transition enter-active-class="slideInDown" leave-active-class="slideOutDown">
        <div v-show="showPopover" class="popover" @click.stop>
          <div>
            <p>性别</p>
            <div>
              <span @click="sex=''" :class="{active:sex==''}">不限</span>
              <span @click="sex=2" :class="{active:sex==2}">男</span>
              <span @click="sex=1" :class="{active:sex==1}">女</span>
            </div>
          </div>
          <div>
            <p>认证</p>
            <div>
              <span @click="auth" :class="{active:withoutAuth}">不限</span>
              <span @click="authentication.idcard==1?authentication.idcard='':authentication.idcard=1" :class="{active:authentication.idcard}">身份认证</span>
              <span @click="authentication.car==1?authentication.car='':authentication.car=1" :class="{active:authentication.car}">车辆认证</span>
              <span @click="authentication.video==1?authentication.video='':authentication.video=1" :class="{active:authentication.video}">视频认证</span>
              <span @click="authentication.house==1?authentication.house='':authentication.house=1" :class="{active:authentication.house}">房产认证</span>
              <span @click="authentication.health==1?authentication.health='':authentication.health=1" :class="{active:authentication.health}">健康认证</span>
            </div>
          </div>
          <button @click="makesure">确定</button>
        </div>
      </transition>
    </div>
  </div>
</template>
<script>
  import {PopupPicker, Group} from 'vux'

  const COMPONENT_NAME = 'filtercpt'

  export default {
    name: COMPONENT_NAME,
    props: {
      showPopover: {
        type: Boolean,
        default: false,
      }
    },
    components: {
      PopupPicker,
      Group,
    },
    data() {
      return {
        sex: "",//性别搜索，1女2男。没有传入空的
        authentication: {//房产认证，选中为1,没有选中为空
          idcard: "",
          car: "",
          house: "",
          health: "",
          video: "",
        },
      }
    },
    computed: {
      withoutAuth() {
        return this.authentication.idcard == "" && this.authentication.car == "" && this.authentication.house == "" && this.authentication.health == "" && this.authentication.video == ""
      },
    },
    watch: {
    },
    mounted() {
    },
    methods: {
      afterLeave() {

      },
      auth() {
        this.authentication.idcard = "";
        this.authentication.car = "";
        this.authentication.house = "";
        this.authentication.health = "";
        this.authentication.video = "";
      },
      makesure() {
        this.$emit('makesure', this.sex, this.authentication)
      },
    }
  }
</script>
<style scoped lang="scss">
  @keyframes slideInDown {
    from {
      transform: translate3d(0, -100%, 0);
    }
    to {
      transform: translate3d(0, 0, 0);
    }
  }

  @keyframes slideOutDown {
    from {
      transform: translate3d(0, 0, 0);
    }
    to {
      transform: translate3d(0, -100%, 0);
    }
  }

  .slideInDown {
    animation-name: slideInDown;
  }

  .slideOutDown {
    animation-name: slideOutDown;
  }

  .slideOutDown, .slideInDown {
    animation-duration: 0.3s;
  }

  .shade {
    top: 0;
    width: 100%;
    height: 100%;
    position: absolute;
    z-index: 100;
    overflow: hidden;
    & > div {
      overflow: hidden;
      top: 3.14rem;
      height: 100%;
      position: relative;
      background-color: rgba(0, 0, 0, 0.5);
    }
  }

  .popover {
    background-color: #efefef;
    padding: 0 0.5rem;
    & > div {
      color: #908f92;
      p {
        height: 1.4rem;
        line-height: 1.4rem;
        font-size: 0.36rem;
        font-weight: 500;
      }
      div {
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
        &:after {
          content: "";
          width: 46%;
        }
        span {
          font-size: 0.34rem;
          width: 23%;
          height: 0.76rem;
          line-height: 0.76rem;
          text-align: center;
          margin-bottom: 0.34rem;
          box-sizing: border-box;
          &.active {
            background-color: #fff;
            border-radius: 5px;
            border: 1px solid #70c466;
            color: #70c466;
          }
        }
      }
    }
    button {
      height: 1.13rem;
      line-height: 1.13rem;
      width: 100%;
      margin-bottom: 0.54rem;
      border: 1px solid #d4d4d4;
      color: #70c466;
      background-color: #fff;
    }
  }

</style>
