import Vue from 'vue';
import VueRouter from 'vue-router';
import {store} from './store/index';
import server from '@/server/getData';
import {Fn} from '@js/api';

/*按需加载js*/
const Home = r => require.ensure([], () => r(require('./components/home/home.vue')), 'home');
const User = r => require.ensure([], () => r(require('./components/user/user.vue')), 'user');
const SafeHouse = r => require.ensure([], () => r(require('./components/user/safeHouse')), 'safeHouse');
const SignOn = r => require.ensure([], () => r(require('./components/user/signOn')), 'signOn');
const RecentVisit = r => require.ensure([], () => r(require('./components/user/recentVisit')), 'recentVisit');
const Friend = r => require.ensure([], () => r(require('./components/friend/friend.vue')), 'friend');
const ChatWindow = r => require.ensure([], () => r(require('./components/friend/chatWindow')), 'chatWindow');
const Love = r => require.ensure([], () => r(require('./components/affinity/love.vue')), 'love');
const LoveList = r => require.ensure([], () => r(require('./components/affinity/loveList')), 'loveList');
const Search = r => require.ensure([], () => r(require('./components/search/search.vue')), 'search');
const Jyjw = r => require.ensure([], () => r(require('./components/jyjw.vue')), 'jyjw');
const SendGift = r => require.ensure([], () => r(require('./components/user/sendGift.vue')), 'sendGift');
const Star = r => require.ensure([], () => r(require('./components/star.vue')), 'star');
const Zmjy = r => require.ensure([], () => r(require('./components/home/zmjy.vue')), 'zmjy');
const Act = r => require.ensure([], () => r(require('./components/affinity/act.vue')), 'act');
const ActScene = r => require.ensure([], () => r(require('./components/affinity/actScene.vue')), 'actScene');//活动现场
const ActSceneNew = r => require.ensure([], () => r(require('./components/affinity/actSceneNew.vue')), 'actSceneNew');//活动现场(新版)
const BlindDate = r => require.ensure([], () => r(require('./components/blindDate/blindDate.vue')), 'blindDate');//相亲
const BlindDateNew = r => require.ensure([], () => r(require('./components/blindDate/blindDateNew.vue')), 'blindDateNew');//相亲(新版)
const Friendlist = r => require.ensure([], () => r(require('./components/friend/friendlist.vue')), 'friendlist');
const FansList = r => require.ensure([], () => r(require('./components/friend/fansList.vue')), 'fansList');
const Message = r => require.ensure([], () => r(require('./components/friend/message.vue')), 'message');
const MessageDetail = r => require.ensure([], () => r(require('./components/friend/messageDetail.vue')), 'messageDetail');
const Lable = r => require.ensure([], () => r(require('./components/friend/lable.vue')), 'lable');
const GroupChat = r => require.ensure([], () => r(require('./components/friend/groupChat.vue')), 'groupChat');
const Login = r => require.ensure([], () => r(require('./components/login/login.vue')), 'login');
const LoginApp = r => require.ensure([], () => r(require('./components/login/loginApp.vue')), 'loginApp');
const Registered = r => require.ensure([], () => r(require('./components/login/registered.vue')), 'registered');
const FillInUserInfo = r => require.ensure([], () => r(require('./components/login/fillInUserInfo')), 'fillInUserInfo');
const RankingList = r => require.ensure([], () => r(require('./components/home/rankingList')), 'rankingList');
const RankingSignUp = r => require.ensure([], () => r(require('./components/home/rankingSignUp')), 'rankingSignUp');
const Publish = r => require.ensure([], () => r(require('./components/publish/publish')), 'publish');
const Travel = r => require.ensure([], () => r(require('./components/publish/travel')), 'travel');
const Other = r => require.ensure([], () => r(require('./components/publish/other')), 'other');
const Movie = r => require.ensure([], () => r(require('./components/publish/movie')), 'movie');
const UserDetail = r => require.ensure([], () => r(require('./components/user/userDetail')), 'userDetail');
const NearbyPeople = r => require.ensure([], () => r(require('./components/search/nearby/nearbyPeople')), 'nearbyPeople');
const Nearbydate = r => require.ensure([], () => r(require('./components/search/nearby/nearbydate')), 'nearbydate');
const Topline = r => require.ensure([], () => r(require('./components/search/topline/topline')), 'topline');
const Headline = r => require.ensure([], () => r(require('./components/search/topline/headline')), 'headline');//娇友头条
const Headline2 = r => require.ensure([], () => r(require('./components/search/topline/headline2')), 'headline2');//娇友头条2
const ToplineDetail = r => require.ensure([], () => r(require('./components/search/topline/toplineDetail')), 'toplineDetail');
const Moments = r => require.ensure([], () => r(require('./components/search/moments/moments')), 'moments');
const Comments = r => require.ensure([], () => r(require('./components/search/topline/comments')), 'comments');
const UserComment = r => require.ensure([], () => r(require('./components/search/topline/userComment')), 'userComment');
const ForgetPassword = r => require.ensure([], () => r(require('./components/login/forgetPassword')), 'forgetPassword');
const ModifyPassword = r => require.ensure([], () => r(require('./components/login/modifyPassword')), 'modifyPassword');//修改密码
const MyFocus = r => require.ensure([], () => r(require('./components/user/myFocus')), 'myFocus');
const AddFriend = r => require.ensure([], () => r(require('./components/user/addFriend')), 'addFriend');
const MyComments = r => require.ensure([], () => r(require('./components/user/myComments')), 'myComments');
const MyNewComments = r => require.ensure([], () => r(require('./components/user/myNewComments')), 'myNewComments');//我的动态
const CommentDetail = r => require.ensure([], () => r(require('./components/user/commentDetail')), 'commentDetail');
const MyOffer = r => require.ensure([], () => r(require('./components/user/myOffer')), 'myOffer');
const MyEvaluation = r => require.ensure([], () => r(require('./components/user/myEvaluation')), 'myEvaluation');
const PopularActivity = r => require.ensure([], () => r(require('./components/user/popularActivity')), 'popularActivity');//人气活动
const AccountLevel = r => require.ensure([], () => r(require('./components/user/accountLevel')), 'accountLevel');//账号等级
const GrowthValue = r => require.ensure([], () => r(require('./components/user/growthValue')), 'growthValue');//昨日成长值
const LevelPrivilege = r => require.ensure([], () => r(require('./components/user/levelPrivilege')), 'levelPrivilege');//等级特权
const CertificationCenter = r => require.ensure([], () => r(require('./components/user/certificationCenter')), 'certificationCenter');//认证中心
const LevelDescription = r => require.ensure([], () => r(require('./components/user/levelDescription')), 'levelDescription');//等级说明
const MembershipGrowthSystem = r => require.ensure([], () => r(require('./components/user/membershipGrowthSystem')), 'membershipGrowthSystem');//会员成长体系
const IdentityAuth = r => require.ensure([], () => r(require('./components/user/identityAuth')), 'identityAuth');//身份认证
const VideoAuth = r => require.ensure([], () => r(require('./components/user/videoAuth')), 'videoAuth');//视频认证
const HouseAuth = r => require.ensure([], () => r(require('./components/user/houseAuth')), 'houseAuth');//房产认证
const CarAuth = r => require.ensure([], () => r(require('./components/user/carAuth')), 'carAuth');//车辆认证
const HealthyAuth = r => require.ensure([], () => r(require('./components/user/healthyAuth')), 'healthyAuth');//健康认证
const Recharge = r => require.ensure([], () => r(require('./components/user/recharge')), 'recharge');//充值
const UserInfo = r => require.ensure([], () => r(require('./components/user/userInfo')), 'userInfo');//个人信息查看
const ActInfo = r => require.ensure([], () => r(require('./components/affinity/actInfo')), 'actInfo');//群信息
const ActInfoEdit = r => require.ensure([], () => r(require('./components/affinity/actInfoEdit')), 'actInfoEdit');//编辑资料
const ActMember = r => require.ensure([], () => r(require('./components/affinity/actMember')), 'actMember');//群成员
const PrizeDraw = r => require.ensure([], () => r(require('./components/home/prizeDraw')), 'prizeDraw');//抽奖
const UserCenter = r => require.ensure([], () => r(require('./components/user/userCenter')), 'userCenter');//会员中心
const EarnCoin = r => require.ensure([], () => r(require('./components/user/earnCoin')), 'earnCoin');//赚乾坤币
const Bill = r => require.ensure([], () => r(require('./components/user/bill')), 'bill');//账单
const Transaction = r => require.ensure([], () => r(require('./components/user/transaction')), 'transaction');//账单2
const PrizeSelect = r => require.ensure([], () => r(require('./components/home/prizeSelect')), 'prizeSelect');//奖池选择
const ArticlePost = r => require.ensure([], () => r(require('./components/user/articlePost')), 'articlePost');//发布文章
const Setting = r => require.ensure([], () => r(require('./components/user/setting')), 'setting');//设置
const Notice = r => require.ensure([], () => r(require('./components/user/notice')), 'notice');//通知
const AccountSecurity = r => require.ensure([], () => r(require('./components/user/accountSecurity')), 'accountSecurity');//账号安全
const Privacy = r => require.ensure([], () => r(require('./components/user/privacy')), 'privacy');//隐私
const Bond = r => require.ensure([], () => r(require('./components/user/bond')), 'bond');//保证金
const Blacklist = r => require.ensure([], () => r(require('./components/user/blacklist')), 'blacklist');//黑名单
const Gift = r => require.ensure([], () => r(require('./components/user/gift')), 'gift');//我的礼物
const ModifyData = r => require.ensure([], () => r(require('./components/user/modifyData')), 'modifyData');//资料完善
const AddMoment = r => require.ensure([], () => r(require('./components/user/addMoment')), 'addMoment');//发朋友圈
const BindLogin = r => require.ensure([], () => r(require('./components/user/bindLogin')), 'bindLogin');//绑定/解绑第三方登录
const Shop = r => require.ensure([], () => r(require('./components/home/shop')), 'shop');//商城
const BindPhone = r => require.ensure([], () => r(require('./components/user/bindPhone')), 'bindPhone');//换绑手机
const MyPrize = r => require.ensure([], () => r(require('./components/home/myPrize')), 'myPrize');//我的奖品
const MyBlindDate = r => require.ensure([], () => r(require('./components/blindDate/myBlindDate')), 'myBlindDate');//我的相亲
const RegistrationActivity = r => require.ensure([], () => r(require('./components/blindDate/registrationActivity')), 'registrationActivity');//相亲活动
const ActivityDetail = r => require.ensure([], () => r(require('./components/blindDate/activityDetail')), 'activityDetail');//相亲活详情
const ActivityDetailStatic = r => require.ensure([], () => r(require('./components/blindDate/activityDetailStatic')), 'activityDetailStatic');//相亲活详情静态页面
const RegistrationStaff = r => require.ensure([], () => r(require('./components/blindDate/registrationStaff')), 'registrationStaff');//报名人员
const PublishBlindDate = r => require.ensure([], () => r(require('./components/blindDate/publishBlindDate')), 'publishBlindDate');//发布相亲活动
const Preview = r => require.ensure([], () => r(require('./components/blindDate/preview')), 'preview');//预览相亲活动
const Putforward = r => require.ensure([], () => r(require('./components/user/putforward')), 'putforward');//提现
const BlindDatePay = r => require.ensure([], () => r(require('./components/blindDate/blindDatePay')), 'blindDatePay');//相亲支付
const AddressMap = r => require.ensure([], () => r(require('./components/blindDate/addressMap')), 'addressMap');//地图
const Sign = r => require.ensure([], () => r(require('./components/blindDate/sign')), 'sign');//相亲签到
const VideoList = r => require.ensure([], () => r(require('./components/video/videoList')), 'videoList');//视频

Vue.use(VueRouter);
const NotFoundComponent={
  template:'<h1 style="text-align:center;">NotFound</h1>'
}
const routers = [
  {path: '/home',name: 'home',component: Home,meta:{title:"相约乾坤岛"}},//首页
  {path: '/rankingList',name: 'rankingList',component: RankingList,meta:{title:"最美娇友"}},//最美娇友
  {path: '/rankingSignUp',name: 'rankingSignUp',component: RankingSignUp,meta:{title:"最美娇友"}},//最美娇友
  {path: '/publish/:pagerouter',name: 'publish',component: Publish,meta:{title:"最美娇友"}},//最美娇友
  {path: '/travel/:pagerouter',name: 'travel',component: Travel,meta:{title:"最美娇友"}},//最美娇友
  {path: '/other/:pagerouter',name: 'other',component: Other,meta:{title:"最美娇友"}},//最美娇友
  {path: '/movie/:pagerouter',name: 'movie',component: Movie,meta:{title:"最美娇友"}},//最美娇友
  {path: '/user',name: 'user',component: User,meta:{title:"我的"}},//我的
  {path: '/safeHouse',name: 'safeHouse',component: SafeHouse,meta:{title:"娇友金屋"}},//娇友金屋
  {path: '/signOn',name: 'signOn',component: SignOn,meta:{title:"签到"}},//签到
  {path: '/recentVisit',name: 'recentVisit',component: RecentVisit,meta:{title:"最近来访"}},//最近来访
  {path: '/userDetail',name: 'userDetail',component: UserDetail,meta:{title:"我的"}},//我的
  {path: '/friend',name: 'friend',component: Friend,meta:{title:"娇友"}},//娇友
  {path: '/chatWindow',name: 'chatWindow',component: ChatWindow,meta:{title:"聊天窗口"}},//聊天窗口
  {path: '/love',name: 'love',component: Love,meta:{title:"邀约"}},//娇缘
  {path: '/loveList',name: 'loveList',component: LoveList,meta:{title:"选缘"}},//选缘
  {path: '/actScene',name: 'actScene',component: ActScene,meta:{title:"活动现场"}},//活动现场
  {path: '/actSceneNew',name: 'actSceneNew',component: ActSceneNew,meta:{title:"活动现场"}},//活动现场(新版)
  {path: '/blindDate',name: 'blindDate',component: BlindDate,meta:{title:"相亲"}},//相亲
  {path: '/blindDateNew',name: 'blindDateNew',component: BlindDateNew,meta:{title:"相亲"}},//相亲(新版)
  {path: '/search',name: 'search',component: Search,meta:{title:"发现"}},//发现
  {path: '/nearbyPeople',name: 'nearbyPeople',component: NearbyPeople,meta:{title:"附近的人"}},//附近的人
  {path: '/nearbydate',name: 'nearbydate',component: Nearbydate,meta:{title:"我的"}},//附近的约会
  {path: '/topline',name: 'topline',component: Topline,meta:{title:"娇友头条"}},//娇友头条
  {path: '/headline',name: 'headline',component: Headline,meta:{title:"娇友头条"}},//娇友头条
  {path: '/headline2',name: 'headline2',component: Headline2,meta:{title:"娇友头条"}},//娇友头条2
  {path: '/toplineDetail/:pagerouter',name: 'toplineDetail',component: ToplineDetail,meta:{title:"娇友头条详情页"}},//娇友头条详情页
  {path: '/comments/:pagerouter',name: 'comments',component: Comments,meta:{title:"娇友头条评论"}},//娇友头条详情评论
  {path: '/userComment/:pagerouter',name: 'userComment',component: UserComment,meta:{title:"娇友头条评论"}},//娇友头条详情评论详情
  {path: '/moments',name: 'moments',component: Moments,meta:{title:"娇友动态"}},//娇友动态
  {path: '/jyjw',name: 'jyjw',component: Jyjw,meta:{title:"娇友金屋"}},//娇友金屋
  {path: '/sendGift/:pagerouter',name: 'sendGift',component: SendGift,meta:{title:"购买礼物"}},//送礼
  {path: '/star',name: 'star',component: Star,meta:{title:"约会明星"}},//约会明星
  {path: '/zmjy',name: 'zmjy',component: Zmjy,meta:{title:"最美娇友"}},//最美娇友
  {path: '/act',name: 'act',component: Act,meta:{title:"邀约详情"}},//活动详情
  {path: '/actInfo',name: 'actInfo',component: ActInfo,meta:{title:"群信息"}},//群信息
  {path: '/actInfoEdit',name: 'actInfoEdit',component: ActInfoEdit,meta:{title:"编辑资料"}},//编辑资料
  {path: '/actMember',name: 'actMember',component: ActMember,meta:{title:"群成员"}},//群成员
  {path: '/friendlist',name: 'friendlist',component: Friendlist,meta:{title:"娇友列表"}},//娇友列表
  {path: '/fansList',name: 'fansList',component: FansList,meta:{title:"娇友列表"}},//娇友列表
  {path: '/message',name: 'message',component: Message,meta:{title:"消息列表"}},//消息列表
  {path: '/messageDetail',name: 'messageDetail',component: MessageDetail,meta:{title:"消息列表"}},//消息列表
  {path: '/lable',name: 'lable',component: Lable,meta:{title:"标签"}},//标签
  {path: '/groupChat',name: 'groupChat',component: GroupChat,meta:{title:"群聊"}},//群聊
  {path: '/login',name: 'login',component: Login,meta:{title:"登录"}},//登录
  {path: '/loginApp',name: 'loginApp',component: LoginApp,meta:{title:"登录"}},//登录(app用)
  {path: '/registered',name: 'registered',component: Registered,meta:{title:"注册"}},//注册
  {path: '/fillInUserInfo',name: 'fillInUserInfo',component: FillInUserInfo,meta:{title:"个人信息"}},//个人信息
  {path: '/forgetPassword',name: 'forgetPassword',component: ForgetPassword,meta:{title:"忘记密码"}},//忘记密码
  {path: '/modifyPassword',name: 'modifyPassword',component: ModifyPassword,meta:{title:"修改密码"}},//修改密码
  {path: '/myFocus',name: 'myFocus',component: MyFocus,meta:{title:"我的关注"}},//我的关注
  {path: '/addFriend',name: 'addFriend',component: AddFriend,meta:{title:"添加娇友"}},//添加好友
  {path: '/myComments',name: 'myComments',component: MyComments,meta:{title:"我的动态"}},//我的动态
  {path: '/myNewComments',name: 'myNewComments',component: MyNewComments,meta:{title:"我的动态"}},//我的动态(测试)
  {path: '/commentDetail',name: 'commentDetail',component: CommentDetail,meta:{title:"我的动态"}},//我的动态(详情)
  {path: '/myOffer',name: 'myOffer',component: MyOffer,meta:{title:"我的邀约"}},//我的邀约
  {path: '/myEvaluation',name: 'myEvaluation',component: MyEvaluation,meta:{title:"我的评价"}},//我的评价
  {path: '/popularActivity',name: 'popularActivity',component: PopularActivity,meta:{title:"人气活动"}},//人气活动
  {path: '/accountLevel',name: 'accountLevel',component: AccountLevel,meta:{title:"账号等级"}},//账号等级
  {path: '/growthValue',name: 'growthValue',component: GrowthValue,meta:{title:"昨日成长值"}},//昨日成长值
  {path: '/levelPrivilege',name: 'levelPrivilege',component: LevelPrivilege,meta:{title:"等级特权"}},//等级特权
  {path: '/certificationCenter',name: 'certificationCenter',component: CertificationCenter,meta:{title:"认证中心"}},//认证中心
  {path: '/levelDescription',name: 'levelDescription',component: LevelDescription,meta:{title:"等级说明"}},//等级说明
  {path: '/membershipGrowthSystem',name: 'membershipGrowthSystem',component: MembershipGrowthSystem,meta:{title:"会员成长体系"}},//会员成长体系
  {path: '/identityAuth',name: 'identityAuth',component: IdentityAuth,meta:{title:"身份认证"}},//身份认证
  {path: '/videoAuth',name: 'videoAuth',component: VideoAuth,meta:{title:"视频认证"}},//视频认证
  {path: '/healthyAuth',name: 'healthyAuth',component: HealthyAuth,meta:{title:"健康认证"}},//健康认证
  {path: '/carAuth',name: 'carAuth',component: CarAuth,meta:{title:"车辆认证"}},//车辆认证
  {path: '/houseAuth',name: 'houseAuth',component: HouseAuth,meta:{title:"房产认证"}},//房产认证
  {path: '/recharge',name: 'recharge',component: Recharge,meta:{title:"充值"}},//充值
  {path: '/userInfo',name: 'userInfo',component: UserInfo,meta:{title:"个人信息查看"}},//个人信息查看
  {path: '/prizeDraw/:pagerouter',name: 'prizeDraw',component: PrizeDraw,meta:{title:"抽奖"}},//抽奖
  {path: '/prizeSelect',name: 'prizeSelect',component: PrizeSelect,meta:{title:"奖池选择"}},//奖池选择
  {path: '/userCenter',name: 'userCenter',component: UserCenter,meta:{title:"会员中心"}},//会员中心
  {path: '/earnCoin',name: 'earnCoin',component: EarnCoin,meta:{title:"赚乾坤币"}},//赚乾坤币
  {path: '/bill',name: 'bill',component: Bill,meta:{title:"账单"}},//账单
  {path: '/transaction',name: 'transaction',component: Transaction,meta:{title:"账单"}},//账单2
  {path: '/articlePost',name: 'articlePost',component: ArticlePost,meta:{title:"发布文章"}},//发布文章
  {path: '/setting',name: 'setting',component: Setting,meta:{title:"设置"}},//设置
  {path: '/blacklist',name: 'blacklist',component: Blacklist,meta:{title:"设置"}},//黑名单
  {path: '/notice',name: 'notice',component: Notice,meta:{title:"通知"}},//通知
  {path: '/accountSecurity',name: 'accountSecurity',component: AccountSecurity,meta:{title:"账号安全"}},//账号安全
  {path: '/privacy',name: 'privacy',component: Privacy,meta:{title:"隐私"}},//隐私
  {path: '/bond',name: 'bond',component: Bond,meta:{title:"保证金"}},//保证金
  {path: '/gift/:pagerouter',name: 'gift',component: Gift,meta:{title:"我的礼物"}},//我的礼物
  {path: '/modifyData',name: 'modifyData',component: ModifyData,meta:{title:"资料完善"}},//资料完善
  {path: '/addMoment',name: 'addMoment',component: AddMoment,meta:{title:"发朋友圈"}},//发朋友圈
  {path: '/bindLogin',name: 'bindLogin',component: BindLogin,meta:{title:"绑定/解绑第三方登录"}},//绑定/解绑第三方登录
  {path: '/shop',name: 'shop',component: Shop,meta:{title:"商城"}},//商城
  {path: '/bindPhone',name: 'bindPhone',component: BindPhone,meta:{title:"换绑手机"}},//换绑手机
  {path: '/myPrize',name: 'myPrize',component: MyPrize,meta:{title:"换绑手机"}},//换绑手机
  {path: '/myBlindDate',name: 'myBlindDate',component: MyBlindDate,meta:{title:"我的相亲"}},//我的相亲
  {path: '/registrationActivity',name: 'registrationActivity',component: RegistrationActivity,meta:{title:"相亲活动"}},//相亲活动
  {path: '/activityDetail',name: 'activityDetail',component: ActivityDetail,meta:{title:"相亲活动详情"}},//相亲活动详情
  {path: '/activityDetailStatic',name: 'activityDetailStatic',component: ActivityDetailStatic,meta:{title:"相亲活动详情"}},//相亲活动详情静态页面
  {path: '/registrationStaff',name: 'registrationStaff',component: RegistrationStaff,meta:{title:"报名人员"}},//报名人员
  {path: '/publishBlindDate',name: 'publishBlindDate',component: PublishBlindDate,meta:{title:"发布相亲活动"}},//发布相亲活动
  {path: '/preview',name: 'preview',component: Preview,meta:{title:"预览相亲活动"}},//视频
  {path: '/putforward',name: 'putforward',component: Putforward,meta:{title:"提现"}},//提现
  {path: '/blindDatePay',name: 'blindDatePay',component: BlindDatePay,meta:{title:"相亲支付"}},//相亲支付
  {path: '/addressMap',name: 'addressMap',component: AddressMap,meta:{title:"收货地址"}},//收货地址
  {path: '/sign',name: 'sign',component: Sign,meta:{title:"签到"}},//签到
  {path: '/videoList',name: 'videoList',component: VideoList,meta:{title:"视频"}},//视频

	{path: '*', component: NotFoundComponent ,title:'相约乾坤岛'},//404
	{path: '/',redirect: '/home',title:'相约乾坤岛'},//跳到首页
	{path: '/index.html',redirect: '/home',title:'相约乾坤岛'}//跳到首页
];
const basepath=window.location.pathname.replace("HBuild.html","").replace("index.html","");
const router = new VueRouter({
	// mode: 'history',
	linkActiveClass: 'cur',
	linkExactActiveClass: 'cur',
	//base: '/storage/emulated/0/Android/data/io.dcloud.HBuilder/apps/HBuilder/www/',//HBuilder打包配置
	//base:'/webpackVue/dist/',//本地打包配置
	base:basepath,//HB打包apk需要
	routes: routers,
	scrollBehavior (to, from, savedPosition) {//滚动到顶部
		if (savedPosition) {
			return savedPosition
		} else {
			return { x: 0, y: 0 }
		}
	}
})
//const wxsdkArr=["act"];
router.beforeEach(async(to, from, next)=>{
  console.log("触发全局前置路由守卫")
  // window.$api.clearStorage();
  // 检查是否登陆
	/*if(to.meta.title){
		document.title = to.meta.title;
	}else{
		document.title = "相约乾坤岛";
	}*/
	// XXX: 修复iOS版微信HTML5 History兼容性问题
	//console.log(location,to)
	//if (location.hash.replace("#/",'')!=''&&store.state.isWeixin && "#"+to.fullPath !== location.hash){
		// 此处不可使用location.replace
		//console.log(location)
		//location.assign(location.origin+location.pathname+"#"+to.fullPath);
		//window.history.replaceState(null, null, location.origin+location.pathname+"#"+to.fullPathnull);
		//window.location.href=location.origin+location.pathname+"#"+to.fullPath;//ios微信授权失败
		//alert("刷新地址")
		//return false;
	//}
	/*if(to.name==from.name&&to.name=='activityDetail'){
		router.back();
		next();
		return false;
	}*/
	//alert(to.name+"--"+from.name)
	//if(to.name=="login"&&from.name=="activityDetailStatic"){
		//store.commit("CHANGESTORE",{name:"gotoBlindDatepay",value:true});//是否需要弹出支付
	//}
	 if(!store.state.isWeixin&&to.name=="login"){//app的登录跳到loginApp
        next({
          path: '/loginApp',
        });
		return false;
      }
	if(window.api){
		window.api.setStatusBarStyle({
		  style: 'dark'
		});
	}
		
	//console.log("dddddd")
	//alert(to);
	//console.log("to:"+JSON.stringify(to));//不知为啥这里会报错
//	console.log("aaaaaaaa")
	let params={};
  params=Fn.toWxUrl(window.location.href);
 // alert("params:"+JSON.stringify(params));
  if(params&&params.query&&params.query.unionkey&&params.query.unionkey=='zzrbPWC'&&sessionStorage){
    sessionStorage.setItem('isUnion',params.query.unionkey)
  }
    if(!store.state.Authorization){//当前用户没有登陆

    const Authorization = window.$api.getStorage('Authorization');
    //alert("Authorization:"+Authorization)
    if(Authorization){
      const userId = window.$api.getStorage('userId');
      //alert("userId:"+userId)
      if(userId){
        store.commit("CHANGEACCESSTOKEN",{
          token:Authorization,
          userId:userId
        });
        //let userInfo = window.$api.getStorage('userInfo');
		//alert(JSON.stringify(store.state.userInfo))
        if(!store.state.userInfo.id){
			try{
				let result = await server.getUserInfo({userId:userId});
				store.commit("LOGIN",result.data.data);
			}catch(e){

			}
		}
		/*if(!userInfo.openid&&store.state.isWeixin){
			try{
				alert("绑定id");
				let result = await server.publicBindingOpenid({});
				alert("绑定成功:"+JSON.stringify(result));
			}catch(e){
				alert("绑定id错误:"+JSON.stringify(e));
			}
		}*/
		// alert("已登录:"+to.name)
		if(params.query&&params.query.redirectUrl){//商城来的地址
			let paramsPHP=Fn.toWxUrl("#/?state="+params.query.redirectUrl,":");
			let url=paramsPHP.name+".php";
			if(paramsPHP.query){
				Object.keys(paramsPHP.query).forEach(attr => {
					if(url.indexOf("?")!=-1){
						url+='&'+attr+"="+paramsPHP.query[attr];
					}else{
						url+='?'+attr+"="+paramsPHP.query[attr];
					}
				});
			}
			window.location.href=store.state.phpURL+"/mobile/"+url;
			return false;
		}
		if((to.name=="videoList"||to.name=="activityDetailStatic")&&store.state.isBrowser){//不用检查登录的
			next();
			return;
		}
        if(store.state.userInfo.sex==0){
          next('/fillInUserInfo');
          return;
        }
        if(to.name=="login"||to.name=="registered"||to.name=="loginApp"){
          next('/home');
          return;
        }
		/*if(store.state.isWeixin){
			params=Fn.toWxUrl(window.location.href);
			alert("1:"+params.name+"----"+from.name+"-----"+to.name);
			if(params.name&&params.name!=from.name){
				if(window.history&&window.history.replaceState){
					var url = params.query?window.location.href.replace("?code="+params.query.code,""):window.location.href;
					url = url.replace("&state="+params.str,'');
					window.history.replaceState({}, 0, url);//url去掉多余参数
				}
				//console.log("next111:"+params.name);

				next({name: params.name, query: params.query});
				return;

			}
		}*/
        next()
        return;
      }else{
        if(to.name=="login"||to.name=="registered"||to.name=="forgetPassword"||to.name=="loginApp"){
          next();
          return;
        }
		// alert("没有登录:"+to.name)
		if((to.name=="videoList"||to.name=="activityDetailStatic")&&store.state.isBrowser){//不用检查登录的
			next();
			return;
		}
        next('/login');
        return;
      }
    }else{
		//alert(store.state.isWeixin)
		//alert("没登录微信:"+to.name);
		if(store.state.isWeixin){//微信打开
			//alert("微信打开")
			if(store.state.otherLogin.isBind){
				//alert("第三方isBind");
				if(to.name=="login"||to.name=="registered"||to.name=="forgetPassword"||to.name=="loginApp"){
					next();
				}else{
					next('/login');
				}
				return;
			}else{
				params=Fn.toWxUrl(window.location.href);
				//alert("params:"+JSON.stringify(params));
				try{	
					if(params.query&&params.query.code){
						let result = await server.WxCheckLogin({
							code:params.query.code,
						});
						//alert("WxCheckLogin"+JSON.stringify(result.data.data));
						store.commit("CHANGEACCESSTOKEN",result.data.data);
						try{
							let userInfo = await server.getUserInfo({userId:result.data.data.userId});
							store.commit("LOGIN",userInfo.data.data);
						}catch(e){

						}
						if(window.history&&window.history.replaceState){
							var url = params.query?window.location.href.replace("?code="+params.query.code,""):window.location.href;
							url = url.replace("&state="+params.str,'');
							window.history.replaceState({}, 0, url);//url去掉多余参数
						}
						if(params.query.redirectUrl){//商城来的地址
							let paramsPHP=Fn.toWxUrl("#/?state="+params.query.redirectUrl,":");
							let url=paramsPHP.name+".php";
							if(paramsPHP.query){
								Object.keys(paramsPHP.query).forEach(attr => {
									if(url.indexOf("?")!=-1){
										url+='&'+attr+"="+paramsPHP.query[attr];
									}else{
										url+='?'+attr+"="+paramsPHP.query[attr];
									}
								});
							}
							window.location.href=store.state.phpURL+"/mobile/"+url;
							return false;
						}
						//console.log("next222:"+params.name);
						next({name: params.name||to.name, query: params.query});
						return;
					}else{
						let str=to.name;
						if(Object.keys(to.query).length>0){
							str+="_"
						}
						for(let v in to.query){
							str+="_"+v+"_"+to.query[v];
						}
						//alert("str:"+str);
						window.location.href=store.state.baseURL+"/api/account/publicAddressLoginUrl?&state="+str;
						return false;
					}
				}catch(e){
					//alert("微信:"+JSON.stringify(e));
					//console.log(JSON.stringify(e.data));
					if(e.status==140017){//没有绑定账号
						// alert("绑定微信:"+to.name)
						 if(window.history&&window.history.replaceState){
							var url = params.query?window.location.href.replace("?code="+params.query.code,""):window.location.href;
							url = url.replace("&state="+params.str,'');
							window.history.replaceState({}, 0, url);//url去掉多余参数
						}
						store.commit("CHANGEOTHERLOGIN",{
							unionid:e.data.unionid,
							openid:e.data.openid,
							unionkey:params.query&&params.query.unionkey,
							nominateUserId:params.query&&params.query.nominateUserId,
							isBind:true,
							type:'wxmp',
							params:params,
						});
						if((to.name=="videoList"||to.name=="activityDetailStatic"||params.name=="videoList"||params.name=="activityDetailStatic")&&store.state.isBrowser){//不用检查登录的
							next();
							return;
						}
						/*Vue.$vux.toast.show({
							type:"cancel",
							text: "请登录/注册绑定账号",
							position:"middle",
							width:"2rem",
						});*/
						next({name: "login", query: params.query});
						return false;
					}else if(e.status==500){//特殊处理500的
						//500
					}else{//再次获取code//http://192.168.0.50:8082/#/activityDetail?code=081X9aKn0glQDk1z3bKn0bHWJn0X9aKL&times=1545662543047&id=1583029e21d24ed4931537cf7fec302e&unionkey=zzrbPWC  返回了undefined
						window.location.href=store.state.baseURL+"/api/account/publicAddressLoginUrl?&state="+params.str;
						return false;
					}
				}
			}
		}else if(to.name=="login"||to.name=="registered"||to.name=="forgetPassword"||to.name=="loginApp"){
			next();
			return;
		}else if(store.state.isBrowser&&(to.name=="videoList"||to.name=="activityDetailStatic")){
			next();
			return;
		}
		
      next('/login');
      return;
    }
  }else{
	 if(!store.state.isGetMessage){//临时修改,第一次进入需要获取的东西
		store.dispatch("pollingMessage");
		store.commit("CHANGESTORE",{name:"isGetMessage",value:true});//是否已经定时获取信息
	 }
	 //alert("路由跳转已登录:"+to.name)
     if(to.name=="fillInUserInfo"){
      next();
      // next('/home');
      return;
    }
    if(to.name=="login"||to.name=="registered"||to.name=="loginApp"){
      next('/home');
      return;
    }
	//alert("性别:"+store.state.userInfo.sex)
    if(store.state.userInfo.sex==0){
      next('/fillInUserInfo');
      return;
    }
	/*if(store.state.isWeixin){
		params=Fn.toWxUrl(window.location.href);
		alert("3:"+params.name+"----"+from.name+"-----"+to.name);
		if(params.name&&params.name!=from.name){
			if(window.history&&window.history.replaceState){
				var url = params.query?window.location.href.replace("?code="+params.query.code,""):window.location.href;
				url = url.replace("&state="+params.str,'');
				window.history.replaceState({}, 0, url);//url去掉多余参数
			}
			console.log("next333:"+params.name+":"+from.name);
			next({name: params.name, query: params.query});
			return;

		}
	}*/
    next();
  }
})
router.beforeResolve(async (to,from,next)=>{
  next();
  // if(to.name=="login"||to.name=="registered"){
  //   next()
  //   return;
  // }
  // const userId = window.$api.getStorage('userId');
  // if(userId){
  //   if(store.state.userInfo.id==null){
  //     let result = await server.getUserInfo({userId:userId})
  //     console.log("刷新后自动获取用户信息"+result)
  //   }
  //   next();
  // }else{
  //   next('/login');
  // }
});

export default router;
