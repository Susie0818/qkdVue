<template>
  <div style="height: 100%;">
    <div class="login">
      <div class="top">
        <a @click.stop="$router.replace({
            path: '/login'
          })" class="left"><i class="iconfont">&#xe613;</i>登录</a>
      </div>
      <img class="login_logo" :src="imgs.login_logo" />
      <p class="logo_name">乾坤岛</p>
      <div class="div_input">
        <input class="userName" v-model="phoneNumber" type="text" placeholder="请输入手机号">
      </div>
      <div class="div_input">
        <input class="verification" v-model="verificationCode"  type="text" placeholder="请输入验证码">
        <span @click="getVerificationCode" :style="colorRed">{{verificationCodeContent}}</span>
      </div>
      <div class="div_input">
      <input class="passWord" type="password" v-model="password" placeholder="请输入6-16位密码">
      </div>
      <div @click="registered" class="btn_login" :class="{'btn_logined':showOpacity}">下一步</div>
      <div class="other_login registered_bottom">
        <p>登录代表您同意<span @click="showAgreement=true">&lt;&lt;乾坤岛用户协议&gt;&gt;</span></p>
      </div>

    </div>
  <transition enter-active-class="slideInUp" leave-active-class="slideOutUp">
    <agreement v-if="showAgreement" @goback="goback"></agreement>
  </transition>
  </div>
</template>
<script>
import md5 from 'js-md5';
import login_logo from '../../images/registered/logo.png';
import registered from '../../images/registered.png';
import agreement from './agreement.vue';
export default {
	name: 'registered',
  components: {
    agreement
  },
	data () {
		return {
      showAgreement:false,
			imgs:{login_logo:login_logo,registered:registered},
      language:"cn",
      show:false,
      menus: {
        cn: "简体中文",
        en: "English"
      },
      verificationCodeContent:"发送",
      verificationCodeUse:true,
      verificationCodeTime:60,
      colorRed:{'color':'#ff788c','border-color': '#ff788c'},
      password:'',
      phoneNumber:'',
      verificationCode:'',
		}
	},
  computed:{
    showOpacity(){
      return !!(this.verificationCode&&this.password&&this.phoneNumber);
    },
    handleRoute(){
      return this.$store.state.handleRoute;
    },
  },
  watch: {
    handleRoute(newV){
      if(!newV){
        this.showAgreement=false;
      }
    },
    showAgreement(){
      let status = this.showAgreement
      this.$store.commit("CHANGEHANDLEROUTE",status)
    },
    verificationCode(curVal) {
      if (curVal && typeof curVal == 'string') {
        this.verificationCode = curVal.match(/^\d{0,6}/)[0];
      }
    }
  },
  methods:{
    goback() {
      this.showAgreement=false;
    },
    selectLanguage:function(key){
      console.log(key)
      this.language = key;
    },
    toShow:function(){
      this.show=!this.show;
    },
    getVerificationCode:function(){
      if(!this.verificationCodeUse){
        return false;
      }
      if(!this.$utils.isPhoneNum(this.phoneNumber)){
        this.$vux.toast.show({
          type:"text",
          text: "请输入正确的手机号",
          position:"middle",
          width:"auto",
        });
        return false;
      }
      this.verificationCodeUse = false
      this.$vux.loading.show()
      this.$server.get_code({phoneNumber:this.phoneNumber}).then((result)=>{
        this.$vux.loading.hide()
        let interval=setInterval(()=>{
          this.verificationCodeTime--;
          if(this.verificationCodeTime==-1){
            clearInterval(interval);
            this.verificationCodeUse=true
            this.verificationCodeTime=60
            this.colorRed={'color':'#ff788c','border-color': '#ff788c'}
            this.verificationCodeContent="发送"
          }else{
            this.colorRed={}
            this.verificationCodeContent=this.verificationCodeTime+"(s)"
          }
        },1000)
        // this.colorRed={'color':'red'}
        this.colorRed={}
        this.verificationCodeContent=this.verificationCodeTime+"(s)"
      },(err)=>{
        this.verificationCodeUse=true;
      })
      return;
    },
    registered:async function(){
		const t=this;
      if(!this.$utils.isPhoneNum(this.phoneNumber)){
        this.$vux.toast.show({
          type:"text",
          text: "请输入正确的手机号",
          position:"middle",
          width:"auto",
        });
        return false;
      }
      if(this.password==""){
        this.$vux.toast.show({
          type:"text",
          text: "请输入密码",
          position:"middle",
          width:"auto",
        });
        return false;
      }
      if(this.verificationCode==""){
        this.$vux.toast.show({
          type:"text",
          text: "请输入验证码",
          position:"middle",
          width:"auto",
        });
        return false;
      }
      let location={};
      this.$vux.loading.show()
      try{
        location = await this.$store.dispatch("getMylocation");
      }catch (e) {
        this.$vux.loading.hide()
        this.$vux.toast.show({
          type:"text",
          text: "获取定位失败",
          position:"middle",
          width:"auto",
        });
        return;
      }
      let data = {
        phoneNumber:this.phoneNumber,
        password:md5(this.password),
        code:this.verificationCode,
        // source:window.api.systemType=='ios'?4:3,
        source:4,
        longitude:location.lon,
        latitude:location.lat,
		unionkey:t.$store.state.otherLogin&&t.$store.state.otherLogin.unionkey,
      }
      let result= await this.$server.register(data);
      this.$store.commit("CHANGEACCESSTOKEN",result.data.data);
	  if(t.$store.state.otherLogin.isBind){
		try{
			let bind;
			if(t.$store.state.otherLogin.type=='wx'){
				bind= await t.$server.bindwx({
					accessToken:t.$store.state.otherLogin.accessToken,
					openId:t.$store.state.otherLogin.openId,
				});
			}else if(t.$store.state.otherLogin.type=='qq'){
				bind= await t.$server.bindqq({
					accessToken:t.$store.state.otherLogin.accessToken,
				});
			}else if(t.$store.state.otherLogin.type=='wxmp'){
				bind= await t.$server.WxMpbind({
					unionid:t.$store.state.otherLogin.unionid,
					openid:t.$store.state.otherLogin.openid,
					//unionkey:t.$store.state.otherLogin.unionkey
				});
			}
			t.$vux.toast.show({
				type:"text",
				text: "绑定账号成功",
				position:"bottom",
				width:"2rem",
			});
			//t.$store.commit("CHANGEOTHERLOGIN",{});//清空第三方临时登录信息
		}catch(e){
			console.log(JSON.stringify(e));
			t.$vux.toast.show({
				type:"text",
				text: "绑定账号失败",
				position:"bottom",
				width:"2rem",
			});
		}	
	  }
      let userInfo = await this.$server.getUserInfo({userId:result.data.data.userId});
      this.$store.commit("LOGIN",userInfo.data.data);
	  let messageresult = await this.$store.dispatch("insertMessage");
		if(this.$store.state.registrationId==null&&window.api){
			let result2 = await this.$store.dispatch("initJpush");
		}
	  
      this.$vux.loading.hide()
		if(t.$store.state.otherLogin.isBind){
			if(t.$store.state.otherLogin.type=='wxmp'){
				this.$router.replace({name:t.$store.state.otherLogin.params.name, query:t.$store.state.otherLogin.params.query});
			}else if(this.$store.state.redirect){
				this.$router.replace(t.$store.state.redirect);
			}else{
				this.$router.replace({
					path:'/home'
				})
			}
			t.$store.commit("CHANGEOTHERLOGIN",{});//清空第三方临时登录信息
		}else if(this.$store.state.redirect){
			this.$router.replace(t.$store.state.redirect);
		}else{
			this.$router.replace({
				path:'/home'
			})
		}
    }
  },
	beforeRouteEnter (to, from, next) {//进入组件前
		next();
	},
	destroyed () {
	}
}
</script>
<style scoped lang="scss">
  @keyframes slideInUp {
    from {
      transform: translate3d(0, 100%, 0);
    }
    to {
      transform: translate3d(0, 0, 0);
    }
  }

  @keyframes slideOutUp {
    from {
      transform: translate3d(0, 0, 0);
    }
    to {
      transform: translate3d(0, 100%, 0);
    }
  }
  .slideInUp {
    animation-name: slideInUp;
  }

  .slideOutUp {
    animation-name: slideOutUp;
  }
  .slideOutUp, .slideInUp {
    animation-duration: 0.3s;
  }
  .login{
    .top{
      color:#ff788c;
      font-size: 0.52rem;
      position: fixed;
      top:0.75rem;
      width: 100%;
      margin-left: -0.85rem;
      i{
        font-size: 0.52rem;
      }
      a{
        position:absolute;
        padding:3px;
      }
      .left{
        left:0.325rem;
      }
      .right{
        right:0.325rem;
      }
    }
    .btn_login{
      margin: 1.18rem 0 0.38rem;
    }
  }
  .logo_name{
    color:#ff788c;
    text-align: center;
    font-size: 0.44rem;
    font-weight: 400;
    margin-bottom: 0.4rem;
  }
  .div_input{
    position:relative;
    input::-webkit-input-placeholder{
      color:#c6cad1;
    }
    input::-moz-placeholder{   /* Mozilla Firefox 19+ */
      color:#c6cad1;
    }
    input:-moz-placeholder{    /* Mozilla Firefox 4 to 18 */
      color:#c6cad1;
    }
    input:-ms-input-placeholder{  /* Internet Explorer 10-11 */
      color:#c6cad1;
    }
    .userName,.passWord{

    }
    .verification{

    }
    span{
      position:absolute;
      width:1.58rem;
      height: 0.8rem;
      line-height: 0.8rem;
      text-align: center;
      top:0.44rem;
      right:0.16rem;
      color:#aaa8aa;
      border: 1px solid;
      border-color: #aaa8aa;
      border-radius: 0.4rem;
    }
  }
  .other_login{
    .btn_toLogin{
      color:#FFF;
    }
    span{
      color:#00e6b4;
    }
  }
  .jy_isBrowser{
    .login{
      .top{
        top:0;
      }
    }
  }
</style>
