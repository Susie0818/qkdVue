<template>
  <div style="height: 100%;">
    <div class="login">
      <Loading v-if="isloading"></Loading>
      <img class="login_logo" :src="imgs.login_logo" />
      <p class="logo_name">乾坤岛</p>
      <div class="div_input">
        <input class="userName" v-model="loginName" type="text" placeholder="请输入您的手机号">
      </div>
      <div v-if="loginType=='code'" class="div_input">
        <input class="verification" v-model="verificationCode"  type="text" placeholder="请输入验证码">
        <span @click="getVerificationCode" :style="colorRed">{{verificationCodeContent}}</span>
      </div>
      <div v-else class="div_input">
        <input class="passWord" v-model="password" type="password" placeholder="密码">
      </div>
      <div style="position: relative;margin-top: 0.5rem" v-if="!$store.state.isWeixin">
        <a v-if="loginType=='code'" class="reg" href="javascript:;" @click="loginType='password';verificationCode=''">{{$store.state.otherLogin.isBind?'密码绑定':'密码登录'}}</a>
        <a v-else class="reg" href="javascript:;" @click="loginType='code';password=''">{{$store.state.otherLogin.isBind?'验证码绑定':'验证码登录'}}</a>
      </div>
      <div @click="login"  class="btn_login" :class="{'btn_logined':showOpacity}">{{$store.state.otherLogin.isBind?'绑定':loginType=='code'?'快速登录':'登录'}}</div>
      <div style="position: relative;" v-if="!$store.state.otherLogin.isBind">
        <a class="forgot" href="javascript:;" @click="toForgetPassword">忘记密码</a>
        <a class="reg" href="javascript:;" @click="toRegistered">注册</a>
        <!--<a class="language_a" href="javascript:;" @click="toShow">{{menus[language]}}<i class="iconfont userName_i">&#xe600;</i></a>-->
      </div>
      <div class="other_login" v-if="!$store.state.otherLogin.isBind">
        <i v-if="!$store.state.otherLogin.isBind&&!$store.state.isWeixin&&!$store.state.isiOSApp">快捷登录</i>
        <otherLogin v-if="!$store.state.otherLogin.isBind&&!$store.state.isWeixin" @changeLoading="changeLoading"></otherLogin>
        <p>登录代表您同意<span @click="showAgreement=true">&lt;&lt;乾坤岛用户协议&gt;&gt;</span></p>
      </div>
      <div v-else class="other_login registered_bottom">
        <p>绑定代表您同意<span @click="showAgreement=true">&lt;&lt;乾坤岛用户协议&gt;&gt;</span></p>
      </div>
      <!--<actionsheet v-model="show" :menus="menus" @on-click-menu="selectLanguage"></actionsheet>-->
    </div>
    <transition enter-active-class="slideInUp" leave-active-class="slideOutUp">
      <agreement v-if="showAgreement" @goback="goback"></agreement>
    </transition>
  </div>
</template>
<script>
  import md5 from 'js-md5';
  import login_logo from '../../images/registered/logo.png';
  import otherLogin from './otherLogin.vue';
  import agreement from './agreement.vue';
  import Loading from '@other/loading.vue';
  import { TransferDom,Actionsheet,PopupPicker } from 'vux'
  export default {
    name: 'loginApp',
    components: {
      Actionsheet,
      PopupPicker,
      Loading,
      otherLogin,
      agreement
    },
    directives: {
      TransferDom
    },
    data () {
      return {
        loginType:'code',
        showAgreement:false,
        isloading:false,
        imgs:{login_logo:login_logo},
        language:"cn",
        show:false,
        menus: {
          cn: "简体中文",
          en: "English"
        },
        verificationCodeContent:"发送",
        verificationCodeUse:true,
        verificationCodeTime:60,
        colorRed:{'color':'#ff788c','border-color': '#ff788c'},
        loginName:'',
        password:'',
        verificationCode:'',
      }
    },
    computed:{
      canloading(){
        return this.$store.state.otherLogin.isBind;
      },
      showOpacity(){
        return !!(this.loginName&&(this.password||this.verificationCode));
      },
      handleRoute(){
        return this.$store.state.handleRoute;
      },
    },
    watch:{
      handleRoute(newV){
        if(!newV){
          this.showAgreement=false;
        }
      },
      showAgreement(){
        let status = this.showAgreement
        this.$store.commit("CHANGEHANDLEROUTE",status)
      },
      canloading(val){
        if(val){
          this.isloading=false;
        }
      },
      verificationCode(curVal) {
        if (curVal && typeof curVal == 'string') {
          this.verificationCode = curVal.match(/^\d{0,6}/)[0];
        }
      }
    },
	mounted(){
		
	},
    methods:{
      getVerificationCode:function(){
        if(!this.verificationCodeUse){
          return false;
        }
        if(!this.$utils.isPhoneNum(this.loginName)){
          this.$vux.toast.show({
            type:"text",
            text: "请输入正确的手机号",
            position:"middle",
            width:"auto",
          });
          return false;
        }
        this.verificationCodeUse = false
        this.$vux.loading.show()
        this.$server.get_code({phoneNumber:this.loginName}).then((result)=>{
          this.$vux.loading.hide()
          let interval=setInterval(()=>{
            this.verificationCodeTime--;
            if(this.verificationCodeTime==-1){
              clearInterval(interval);
              this.verificationCodeUse=true
              this.verificationCodeTime=60
              this.colorRed={'color':'#ff788c','border-color': '#ff788c'}
              this.verificationCodeContent="发送"
            }else{
              this.colorRed={}
              this.verificationCodeContent=this.verificationCodeTime+"(s)"
            }
          },1000)
          // this.colorRed={'color':'red'}
          this.colorRed={}
          this.verificationCodeContent=this.verificationCodeTime+"(s)"
        },(err)=>{
          this.verificationCodeUse=true;
        })
        return;
      },
      goback() {
        this.showAgreement=false;
      },
      changeLoading(val){
        console.log("登录:"+val)
        this.isloading=val;
      },
      selectLanguage:function(key){
        console.log(key)
        this.language = key;
      },
      toShow:function(){
        this.show=!this.show;
      },
      toForgetPassword:function(){
        this.$router.push({
          path: "/forgetPassword"
        })
      },
      toRegistered:function(){
        this.$router.push({
          path: "/registered"
        })
      },
      async login(){
        const t=this;
        if(this.loginName==''){
          this.$vux.toast.show({
            type:"text",
            text: "请填写手机号",
            position:"middle",
            width:"auto",
          });
          return;
        }
        if(this.password==""&&this.loginType=='password'){
          this.$vux.toast.show({
            type:"text",
            text: "请填写密码",
            position:"middle",
            width:"auto",
          });
          return;
        }
        if(this.verificationCode==""&&this.loginType=='code'){
          this.$vux.toast.show({
            type:"text",
            text: "请填写验证码",
            position:"middle",
            width:"auto",
          });
          return;
        }
        let location={};
        this.$vux.loading.show()
        try{
          location = await this.$store.dispatch("getMylocation");
        }catch (e) {
          this.$vux.loading.hide()
          this.$vux.toast.show({
            type:"text",
            text: "获取定位失败",
            position:"middle",
            width:"auto",
          });
          return;
        }
        let data = {
          loginName:this.loginName,
          password:this.password?md5(this.password):null,
          // source:window.api.systemType=='ios'?4:3,
          source:4,
          longitude:location.lon,
          latitude:location.lat,
          unionkey:t.$store.state.otherLogin&&t.$store.state.otherLogin.unionkey,
          code:this.verificationCode,
		  pid:this.$route.query.pid,//推荐人
        }
        window.$api.setStorage('loginData',data);

        let result= await this.$server.loginAndRegister(data);
        this.$store.commit("CHANGEACCESSTOKEN",result.data.data);
        if(t.$store.state.otherLogin.isBind){
          try{
            let bind;
            if(t.$store.state.otherLogin.type=='wx'){
              bind= await t.$server.bindwx({
                accessToken:t.$store.state.otherLogin.accessToken,
                openId:t.$store.state.otherLogin.openId,
              });
            }else if(t.$store.state.otherLogin.type=='qq'){
              bind= await t.$server.bindqq({
                accessToken:t.$store.state.otherLogin.accessToken,
              });
            }else if(t.$store.state.otherLogin.type=='wxmp'){
              bind= await t.$server.WxMpbind({
                unionid:t.$store.state.otherLogin.unionid,
                openid:t.$store.state.otherLogin.openid,
              });
            }
            t.$vux.toast.show({
              type:"text",
              text: "绑定账号成功",
              position:"bottom",
              width:"2rem",
            });

          }catch(e){
            console.log(JSON.stringify(e));
            // t.$vux.toast.show({
            // 	type:"text",
            // 	text: "绑定账号失败",
            // 	position:"bottom",
            // 	width:"2rem",
            // });
          }
        }
        // let result1= await this.$server.login(data);
        let userInfo = await this.$server.getUserInfo({userId:result.data.data.userId});
        this.$vux.loading.hide()
        this.$store.commit("LOGIN",userInfo.data.data);
        if(t.$store.state.otherLogin.isBind){
          if(t.$store.state.otherLogin.type=='wxmp'){
            this.$router.replace({name:t.$store.state.otherLogin.params.name, query:t.$store.state.otherLogin.params.query});
          }else if(this.$store.state.redirect){
			this.$router.replace(t.$store.state.redirect);
		}else{
            this.$router.replace({
              path:'/home'
            })
          }
          //t.$store.commit("CHANGEOTHERLOGIN",{});//清空第三方临时登录信息
        }else if(this.$store.state.redirect){
			this.$router.replace(t.$store.state.redirect);
		}else{
          this.$router.replace({
            path:'/home'
          })
        }
      }
    },
    beforeRouteEnter (to, from, next) {//进入组件前
      next();
    },
    destroyed () {
    }
  }
</script>
<style scoped lang="scss">
  @keyframes slideInUp {
    from {
      transform: translate3d(0, 100%, 0);
    }
    to {
      transform: translate3d(0, 0, 0);
    }
  }

  @keyframes slideOutUp {
    from {
      transform: translate3d(0, 0, 0);
    }
    to {
      transform: translate3d(0, 100%, 0);
    }
  }
  .slideInUp {
    animation-name: slideInUp;
  }

  .slideOutUp {
    animation-name: slideOutUp;
  }
  .slideOutUp, .slideInUp {
    animation-duration: 0.3s;
  }
  .logo_name{
    color:#ff788c;
    text-align: center;
    font-size: 0.44rem;
    font-weight: 400;
    margin-bottom: 0.4rem;
  }
  .div_input{
    position:relative;
    input::-webkit-input-placeholder{
      color:#c6cad1;
    }
    input::-moz-placeholder{   /* Mozilla Firefox 19+ */
      color:#c6cad1;
    }
    input:-moz-placeholder{    /* Mozilla Firefox 4 to 18 */
      color:#c6cad1;
    }
    input:-ms-input-placeholder{  /* Internet Explorer 10-11 */
      color:#c6cad1;
    }
    span{
      position:absolute;
      width:1.58rem;
      height: 0.8rem;
      line-height: 0.8rem;
      text-align: center;
      top:0.44rem;
      right:0.16rem;
      color:#aaa8aa;
      border: 1px solid;
      border-color: #aaa8aa;
      border-radius: 0.4rem;
    }
  }
  .language_a{
    position: absolute;
    right:0;
    padding:0 10px;
    border: 1px #1dc1a5 solid;
    border-radius: 5px;
    color:#1dc1a5;
    line-height: 150%;
    i{
      float: right;
    }
    display: inline-block;
    width: 2.4rem;
  }
</style>
