<template>
	<div class="main jy_all_top jy_actMember jy_state_top">
		<Loading v-if="isloading"></Loading>
		<div class="header">
			<div class="top">
				<Back class="left"><i class="iconfont">&#xe613;</i></Back><p>群成员</p>
			</div>
		</div>
		<div class="jy_block_t">
			<p class="jy_aInfo_tit">群成员({{count+1}})</p>
			<ul class="jy_aInfo_member">
				<li v-if="owner" class="jy_qz" :class="{jy_bl:isBlindDate}"><i :style="'background-image:url('+$utils.getFullPath(owner.jiaoyouUser.headimgAttachmentId)+')'"></i><p>{{owner.jiaoyouUser.aliasName}}</p></li>
				<template v-if="phList">
					<li v-for="item,index in phList"><i :style="'background-image:url('+$utils.getFullPath(item.jiaoyouUser.headimgAttachmentId)+')'"></i><p>{{item.jiaoyouUser.aliasName}}</p></li>
				</template>
				<!--<li class="jy_aInfo_member_add"><i></i><p>邀请好友</p></li>-->
			</ul>
			
		</div>
	</div>
</template>
<script>
	import Loading from '@other/loading.vue';
	import Back from '@other/back.vue';
	import { InlineXSwitch } from 'vux'
	export default {
	name: 'recharge',
	data () {
		return {
			isloading:false,
			xswitch:false,
			phList:null,//排行榜列表
			owner:null,
			count:-1,
			isBlindDate:this.$route.query.type=='blindDate'?true:false,
		}
	},
    components: {
      Loading,
	  Back,
	  InlineXSwitch,
    },
	destroyed () {
		$("body").removeClass("gray");
	},
    watch:{
		
    },
    async mounted () {
		const t=this;
		$("body").addClass("gray");
		if(t.isBlindDate){
			await t.getBlindSingle();
			t.getBlindPh();
		}else{
			await t.getSingle();//获取活动详情
			t.getPh();
		}
		
		
    },
    methods :{
		async getPh(val){
			const t=this;
			try{
				const result= await t.$server.getDatingCandidateList({
					datingId:t.$route.query.id,
					page:1,
					rows:1000
				});	
				t.phList=result.data.list;
				t.count=result.data.count;
			}catch(e){
				console.log(e);
			}
		},
		async getBlindPh(val){
			const t=this;
			try{
				const result= await t.$server.blindDatingBaoming({
					datingId:t.$route.query.id,
					rows:1000
				});
				t.phList=result.data.list;
				t.count=result.data.count;
			}catch(e){
				console.log(JSON.stringify(e));
			}
			
		},
		async getSingle(){//获取活动详情
			const t=this;
			try{
				const result =await t.$server.getSingle({
					datingDetailsId:t.$route.query.id
				});
				t.owner=result.data.data;
			}catch(e){
				console.log(e);
			}
		},
		async getBlindSingle(){//获取活动详情
			const t=this;
			try{
				//console.log("ddddddddddddddddddd");
				const result =await t.$server.blindDatingSingle({
					datingDetailsId:t.$route.query.id
				});
				t.owner=result.data.data;
				console.log("活动详情:"+JSON.stringify(result.data));
				
			}catch(e){
				console.log(e);
			}
		},
    }
  }
</script>

