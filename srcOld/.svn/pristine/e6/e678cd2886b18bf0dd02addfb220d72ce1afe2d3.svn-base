<template>
  <div class="main">
    <Loading v-if="isloading"></Loading>
    <div class="header">
      <div class="top">
        <a class="left" @click="goback"><i class="iconfont">&#xe613;</i></a>我的代理
      </div>
    </div>
    <div class="agent_top fixed" style="margin-top: 1.6rem;">
      <div class="top_con">
        <div class="icon left_icon"></div>
        <div class="left_con">
          <p>今日消费：{{consumption.consumeJiaobiCountDay?consumption.consumeJiaobiCountDay:0}}</p>
          <p>累计消费：{{accumulatedConsumptionintQkb}}</p>
        </div>
        <div class="line"></div>
        <div>
          <p>今日收入：{{consumption.incomeJiaobiCountDay?consumption.incomeJiaobiCountDay:0}}</p>
          <p>累计收入：{{accumulatedIncomeQkb}}</p>
        </div>
      </div>
      <div class="bottom_con">
        <div class="icon right_icon"></div>
        <div class="left_con">
          <p>今日消费：{{consumption.consumeAmountCountDay?consumption.consumeAmountCountDay:0}}</p>
          <p>累计消费：{{accumulatedCashConsumption}}</p>
        </div>
        <div class="line"></div>
        <div>
          <p>今日收入：{{consumption.incomeAmountCountDay?consumption.incomeAmountCountDay:0}}</p>
          <p>累计收入：{{accumulatedCashIncome}}</p>
        </div>
      </div>
    </div>
    <myScroller :style="$store.state.isBrowser?'padding:6.28rem 0 0;':'padding:6.84rem 0 0;'" :infinite="infinite" :refresh="refresh" :loadRefresh="loadRefresh" :loadInfinite="loadInfinite" ref="myScroller">
      <div class="myscoll">
        <div class="content">
          <template v-if="listArr">
            <template v-if="listArr.length>0">
              <div v-for="(item,index) in listArr" :key="item.id" @click="toLink('incomeDetail',item.id)">
                <div :style="{'background-image':'url('+getFullPath(item.headimgAttachmentId)+')'}" @click.stop="toLink('userInfo',item.id)"></div>
                <div class="userinfo_center">
                  <p>{{item.aliasName}}</p>
                  <p><em class="jy_auth_age" :style="{'background-color':(item.sex==1?'':'rgb(0, 180, 255)')}">{{item.sex==1?'&#xe64a;':'&#xe605;'}}{{item.age}}</em>
                  </p>
                </div>
                <div class="userinfo_right">
                  <span>下级{{item.agentNumber}}人</span>
                  <i class="iconfont">&#xe702;</i>
                </div>
              </div>
            </template>
          </template>
        </div>
      </div>
    </myScroller>
  </div>
</template>

<script>
  import Loading from '@other/loading.vue';
  import myScroller from '@other/myScroller.vue';

  export default {
    name: 'agent',
    components: {
      Loading,
      myScroller,
    },
    data() {
      return {
        isloading: false,
        showPopover: false,
        consumption: {},
        accumulatedConsumptionintQkb: 0,//累积娇币消费
        accumulatedIncomeQkb: 0,//累积娇币收入
        accumulatedCashConsumption: 0,//累积的现金消费
        accumulatedCashIncome: 0,//累计的现金收入
        listArr: [],
        //分页参数
        pageNo: 1,
        isRead: false,
        isEnd: false,
        loadRefresh: true,//下拉刷新
        loadInfinite: true, //上拉加载
      }
    },
    watch:{
      isEnd(val) {
        const t=this;
        if(val){
          t.$refs.myScroller.finishInfinite(true);
        }else{
          t.$refs.myScroller.finishInfinite(false);
        }
      },
    },
    computed: {},
    mounted() {
    },
    methods: {
      goback() {
        this.$router.go(-1);
      },
      toLink(path, id) {
        this.$router.push({
          path: path,
          query: {
            id: id,
          }
        })
      },
      getFullPath(path) {
        return this.$utils.getFullPath(path)
      },
      async getList(flag) {
        const _this = this;
        if (_this.isRead) {
          return false;
        }
        _this.isRead = true;
        if (_this.isRefresh || flag) {
          _this.pageNo = 1;
          if (flag) {
            _this.isloading = true;
          }
        }
        try {
          let data = {
            userId: _this.id,
            page: _this.pageNo,
            rows: _this.$store.state.pageSize
          };
          if (!_this.listArr || _this.isRefresh || flag) {
            _this.$refs.myScroller.scrollTo(1);
            _this.listArr = [];
          }
          let result = await _this.$server.lowerAgent(data);
          if (result.data.consumption) {
            _this.consumption = result.data.consumption;
            _this.accumulatedConsumptionintQkb = result.data.accumulatedConsumptionintQkb;//累积娇币消费
            _this.accumulatedIncomeQkb = result.data.accumulatedIncomeQkb;//累积娇币收入
            _this.accumulatedCashConsumption = result.data.accumulatedCashConsumption;//累积的现金消费
            _this.accumulatedCashIncome = result.data.accumulatedCashIncome;//累计的现金收入
          }
          if (result.data.agents.count>0) {
            _this.listArr.push(...result.data.agents.list);
          }
          if (result.data.agents.count <= _this.$store.state.pageSize * _this.pageNo || result.data.agents.list.length < _this.$store.state.pageSize) {//判断是否最后一页
            _this.isEnd = true;
          } else {
            _this.isEnd = false;
            _this.$refs.myScroller.finishInfinite(false);
          }
        } catch (e) {
          console.log(e)
          _this.isEnd = true;
        }
        _this.isRead = false;
        _this.isloading = false;
        _this.isRefresh = false;
        _this.pageNo++;
      },
      infinite(done) {//上拉加载(防止初始内容不满一屏会无限加载)
        const t = this;
        if (t.isEnd) {
          done(true);
          return false;
        }
        console.log("加载");
        t.getList().then(() => {
          if (t.isEnd) {
            done(true);
          } else {
            done();
          }
        });
      },
      refresh(done) {//下拉刷新
        const t = this;
        console.log("刷新");
        t.isRefresh = true;
        t.getList().then((res) => {
          done();
        });
      },
    }
  }
</script>
<style scoped lang="scss">
  .main {

    .header {
      position: fixed;
      width: 100%;
      z-index: 10;
      .top {
        background-color: #3a3845;
        color: #FFF;
        font-size: 0.52rem;
        position: relative;
        i {
          font-size: 0.52rem;
        }
        a {
          position: absolute;
          padding: 3px;
        }
        .left {
          left: 0.325rem;
        }
        .right {
          right: 0.325rem;
        }
      }
    }

    .agent_top {
      background-color: #ffffff;
      padding: 0.6rem 0.2rem;

      .top_con,
      .bottom_con {
        display: flex;
        align-items: center;
        width: 100%;
        padding: 0.2rem;
        .icon {
          display: inline-block;
          width: 1.14rem;
          height: 1.14rem;
          margin-right: 0.4rem;
        }
        .left_icon {
          background: url("../../images/qkb_icon.png") no-repeat;
          background-size: cover;
        }
        .right_icon {
          background: url("../../images/money_icon.png") no-repeat;
          background-size: cover;
        }
        .line {
          width: 1px;
          height: 1rem;
          border-left: 2px solid #F2F2F2;
          margin: 0 0.4rem;
        }
        div {
          p {
            font-size: 0.4rem;
            color: #202020;
          }
        }
      }
    }

    .myscoll {
      background-color: #ffffff;
      .content {
        padding: 0 0.3rem;
        & > div {
          position: relative;
          display: flex;
          align-items: center;
          height: 2rem;
          line-height: 2rem;
          border-bottom: 1px solid #f2f2f2;
          & > div:first-child {
            width: 1.4rem;
            height: 1.4rem;
            background-size: cover;
            background-position: center;
            border-radius: 50%;
          }
          & > div:nth-of-type(2) {
            width: 6rem;
            p {
              line-height: 2;
              padding: 0 0 0 0.2rem;
              font-size: 0.48rem;
              img {
                margin-left: 0.1rem;
                width: 0.35rem;
                height: 0.35rem;
              }
            }
            p:last-child {
              font-size: 0.36rem;
              color: #9a9a9d;
              overflow: hidden;
              text-overflow: ellipsis;
              white-space: nowrap;
            }
          }
          & > div:last-child {
            position: absolute;
            right: 0;
            color: #666666;
            font-size: 0.36rem;
            display: inline-flex;
            span {
              display: inline-block;
              width: 100%;
              height: 0.7rem;
              line-height: 0.7rem;
              border-radius: 5px;
            }
            i {
              line-height: 0.68rem;
            }
          }
        }
      }
    }
  }
</style>
