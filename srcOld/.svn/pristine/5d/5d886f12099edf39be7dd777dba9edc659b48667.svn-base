<template>
<div class="main jy_all_top jy_auth jy_state_top">
	<Loading v-if="isloading"></Loading>
	<div class="header">
		<div class="top">
			<Back class="left"><i class="iconfont">&#xe613;</i></Back><p>房产认证</p>
		</div>
	</div>
	<div class="jy_auth_block">
		<p class="jy_auth_dp">认证后{{$store.state.userInfo.sex==1?'男':'女'}}生会看到您独有的房产认证图标</p>
		<ul class="jy_auth_list">
			<li>
        <i v-if="$store.state.userInfo.sex==1" class="jy_auth_l_img" bgImg="@images/lhc.jpg"></i>
        <i v-else class="jy_auth_l_img" bgImg="@images/ryy.jpg"></i>
				<h4>{{$store.state.userInfo.sex==1?'令狐冲':'任盈盈'}}<em class="jy_auth_age" :style="{'background-color':($store.state.userInfo.sex==1?'rgb(0, 180, 255)':'')}">{{$store.state.userInfo.sex==1?'&#xe605;':'&#xe64a;'}}23</em><em class="jy_auth_level">17</em><em class="jy_auth_svip">3</em><em class="jy_icon_house"></em></h4>
				<p class="jy_auth_l_p"><em>竞缘</em>已交保证金</p>
			</li>
		</ul>
		<p class="jy_auth_dp">真实度与实力体现，为您加分，提升关注</p>
	</div>
	<div class="jy_auth_block">
		<p class="jy_auth_tit3">完善小区信息</p>
		<input type="text" class="jy_auth_xqname" placeholder="请填写小区名称" v-model="name">
	</div>
	<div class="jy_auth_block">
		<p class="jy_auth_tit3">上传证件</p>
    <selectPhoto @fileBack="fileBack">
		  <div class="jy_auth_up2" :class="{noUploadPhoto:attachmentUrl==''}" :style="'background-image:url('+attachmentUrl+');'"></div>
    </selectPhoto>
	</div>
	<p class="jy_auth_tip"><em>所有上传信息，仅供审核用，不对外显示。</em></p>
	<p class="jy_auth_btn" @click="certification">上传</p>
</div>
</template>
<script>
import Loading from '@other/loading.vue';
import Back from '@other/back.vue';
import selectPhoto from '../plugs/selectPhoto'

export default {
	name: 'identityAuth',
  components: {
    Loading,
    Back,
    selectPhoto,
  },
	data () {
		return {
			isloading:false,
      name:null,
      file: null,
      attachmentUrl: '',
      attachment1: '',
      id:null,
		}
	},
	mounted () {
		const t=this;
		$("body").addClass("gray");
		t.viewCertification();
		t.$nextTick(()=>{
			t.setBgImg();
		})
	},
	destroyed () {
		$("body").removeClass("gray");
	},
	methods:{
		setBgImg(){
			$("a,i,em,li,div").each(function(){//加载背景图片
				const bgimg=$(this).attr("bgImg");
				if(bgimg){
					$(this).css({"background-image":"url("+bgimg+")"});
					$(this).attr("bgImg","");
				}
			});
		},
    async fileBack (obj) {
      const t = this;
      if(obj.serverId){
        let result = await t.$server.wxMpMedia({
          mediaId:obj.serverId[0]
        })
        t.attachmentUrl = t.$utils.getFullPath(result.data.data&&result.data.data.path)
        t.attachment1 = result.data.data&&result.data.data.path;
      }else{
        t.file = obj.file[0]//提交的图片
        t.$utils.getBase64(t.file, (url) => {
          t.attachmentUrl = 'data:image/png;base64,' + url   //显示的图片
        })
        t.uploadPhone();
      }
    },
    async uploadPhone(){//上传图片
      const _this = this;
      if (!_this.file) {
        return false;
      }
      _this.$vux.loading.show();
      let param = new FormData(); //创建form对象
        param.append('fileArray', _this.file, _this.file.name); //单个图片 ，多个用循环 append 添加
      let result = await _this.$server.uploadPic(param);
      _this.attachment1= result.data.data.path;
      _this.$vux.loading.hide();
    },
    async certification () {
      if (!this.name) {
        this.$vux.toast.show({
          type: 'text',
          text: '请完善小区信息',
          position: 'middle',
          width: 'auto',
        })
        return
      }
      if (!this.attachment1) {
        this.$vux.toast.show({
          type: 'text',
          text: '请上传图片',
          position: 'middle',
          width: 'auto',
        })
        return
      }
      const _this = this
      let data = {
        id:_this.id,
        type:2,//身房产认证
        appendInfo1:  _this.name,
        attachment1: _this.attachment1,
      }
      _this.$vux.loading.show();
      let submitResult = await _this.$server.userCertification(data);
      _this.$vux.loading.hide();
      this.$vux.toast.show({
        type: 'text',
        text: '提交成功',
        position: 'middle',
        width: 'auto',
      })
      setTimeout(() => {
        this.$router.go(-1);
      }, 500)
    },
    async viewCertification () {
      const _this = this
      _this.$vux.loading.show();
      let viewResult = await _this.$server.certificationInfo(2);
      if(viewResult.data.data) {
        _this.attachmentUrl = this.$utils.getFullPath(viewResult.data.data.attachment1);
        _this.attachment1 = viewResult.data.data.attachment1;
        _this.name = viewResult.data.data.appendInfo1;
        _this.id = viewResult.data.data.id
      }
      _this.$vux.loading.hide()
    },
	}
}
</script>
